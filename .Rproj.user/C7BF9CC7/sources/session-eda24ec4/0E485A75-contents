# **GIS in R:** Session 11

### **Author:** Martha Storey
### **Date:** 26/12/24 (Last modeified: 30/12/24)

### Set up the Script

```{r setup, include=FALSE}

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

```

```{r}

#clear R memory
rm( list = ls())

library(lubridate) # for data management
library(sf) # for spatial points/lines analysis and management
library(terra) # for raster analysis and management
library(MASS) # distribution fitting
library(CircStats) # circular statistics, for the vonmises distribution plots
library(amt) # animal movement tools
library(raster)

#load the eland data
eland_data <- read.csv("eland.csv")

```

### Initially manage the dataset 

```{r}

#check if all observations are complete
all(complete.cases(eland_data)) #they are, so no action is required

#format datetime as posix
eland_data$datetime <- ymd_hms(eland_data$datetime)

#convert datetime to East AFrica time zone
eland_data$datetime <- with_tz(eland_data$datetime,tzone = 'Africa/Nairobi')

#check for spatial outliers
plot(eland_data$latitude ~ eland_data$longitude, 
     xlab = "Longitude", ylab = "Latitude", main = "Latitude vs Longitude") #there doesn't appear to be any

#set the projection of the GPS data
crs_latlong <- st_crs(4326) #epsg:4326 CRS coordinate reference system lat/long with WGS84 datum

#project the data- convert it into a shape file object (a spatial dataframe with a geometry)
eland_sp <- st_as_sf(eland_data, coords = c("longitude", "latitude"),crs=crs_latlong)

#transform the data into a UTM coordinate ref system
eland_sp_UTM <- st_transform(eland_sp, crs = 21036) 

#convert the spatial dataset into a regular dataframe to be used in amt
eland_df_UTM <- data.frame(st_coordinates(eland_sp_UTM),
                   datetime = eland_sp_UTM$datetime,
                   Animal_ID = eland_sp_UTM$Animal_ID)

```

### Make Track

```{r}

#print the unique individuals in the dataset
unique(eland_df_UTM$Animal_ID)

#select one individual and make it into a dataframe
eland_1 <- subset(eland_df_UTM, Animal_ID == "E04")

#remove dataframe NAs
eland_1 <- eland_1[!is.na(eland_1$datetime),]

#convert dataframe into a track class object using the amt package
eland_1 <- amt::make_track(tbl = as.data.frame(eland_1),
                  .x = X, #column name of x
                  .y = Y, #column name of y
                  .t = datetime, #column name of date + time
                  all_cols=TRUE)

#plot points
plot(eland_1, main='Trajectory of eland E04',col='blue')

#observing the sampling rate
summarize_sampling_rate(eland_1)

```

### Prepare the data for analysis 

```{r}

#1. resample to a common frequency -- 1 point every 2 hours. 
eland_1 <- amt::track_resample(eland_1, rate = hours(2),tolerance = minutes(15))

#2. remove bursts with fewer than 3 values
eland_1 <- amt::filter_min_n_burst(eland_1,min_n = 3)

#3. convert dataframe into 'steps'
eland_1_steps <- amt::steps_by_burst(eland_1)

```
